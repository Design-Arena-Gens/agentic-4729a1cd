name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: jewelia
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
        working-directory: jewelia-api
      - run: npx prisma generate
        working-directory: jewelia-api
      - run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/jewelia?schema=public
        working-directory: jewelia-api
      - run: npm run build
        working-directory: jewelia-api
      - run: npm test --silent
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/jewelia?schema=public
          JWT_ACCESS_SECRET: test_access
          JWT_REFRESH_SECRET: test_refresh
          REDIS_URL: redis://localhost:6379
          RAZORPAY_KEY_ID: test
          RAZORPAY_KEY_SECRET: test
          RAZORPAY_WEBHOOK_SECRET: test
          AWS_REGION: ap-south-1
          AWS_S3_BUCKET: jewelia-assets
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
        working-directory: jewelia-api
